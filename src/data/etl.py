'''
etl.py is used to create table from csv files generated by network-stats.
'''
## import library
import pandas as pd
import numpy as np
from scipy.signal import find_peaks 
import os

def generate_info(string):
    '''
    return a dictionary which contains basic information of one network-stats record.
    
    :param: string: the name of csv_file generated by network-stats
    '''
    str_temp=string.replace('.csv','')
    str_list=str_temp.split('-')
    result={}
    result['username']=str_list[0]
    result['provider']=str_list[1]
    result['streaming/live']=str_list[2]
    result['date']=str_list[3]
    result['#split']=str_list[4]
    return result

def combine_info(file,name):
    '''
    combine two dictionaries which contains basic information and basic data of one network-stats record.
   
    :param: file: the csv_file generated by network-stats
    :param: name: the name of csv_file generated by network-stats
    '''
    temp=file[['Time','1->2Bytes','2->1Bytes','1->2Pkts','2->1Pkts']]
    temp=temp.groupby('Time').sum()
    dic1=generate_info(name)
    dic2={}
    for attr in ['1->2Bytes','2->1Bytes','1->2Pkts','2->1Pkts']:
        dic2[attr]=temp[attr].to_list()
    dic2.update(dic1)   
    return dic2

def generate_table(indir,outdir):
    '''
    return a table to outdir contains information from all records generated by network-stats from indir.
    :param: indir: file directory where raw data stored
    :param: outdir: file directory where generated data stored
    '''
    attr_result=['username','provider','streaming/live',\
                 'date','#split','1->2Bytes','2->1Bytes','1->2Pkts','2->1Pkts']
    df = pd.DataFrame(columns = attr_result)
    for dirpath, dirnames, filenames in os.walk(indir):
        for file in filenames:
            name=file
            file=pd.read_csv(indir+'/'+str(file))
            df = df.append(combine_info(file,name),ignore_index=True)
    df.to_csv(str(outdir+'/ori_table.csv'), index = False, header=True)