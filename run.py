#!/usr/bin/env python
import sys 
import os
import json
import pandas as pd
import numpy as np
from scipy.signal import find_peaks 
from src.data.etl import generate_table
from src.features.build_features import features_build
from src.models.train_model import train_model
#from src.models.predict_model import predict_model
import warnings
warnings.filterwarnings("ignore", message="y_pred contains classes not in y_true")

def main(targets):
    '''
    return a table to outdir contains information from all records generated by network-stats from indir.
    '''
    if 'clean_data' in targets:
        with open('config/data-params.json') as fh:
            data_cfg=json.load(fh)
        generate_table(**data_cfg)
    if 'feature' in targets:
        with open('config/feature-params.json') as fh:
            data_cfg=json.load(fh)
        features_build(**data_cfg)
    if 'train' in targets:
        with open('config/train-params.json') as fh:
            data_cfg=json.load(fh)
        train_model(**data_cfg)
    if 'predict' in targets:
        with open('config/predict-params.json') as fh:
            data_cfg=json.load(fh)
        predict_model(**data_cfg)   
    if 'test' in targets:
        with open('test/config/data-params.json') as fh:
            data_cfg=json.load(fh)
        generate_table(**data_cfg)
        with open('test/config/feature-params.json') as fh:
            data_cfg=json.load(fh)
        features_build(**data_cfg)
        with open('test/config/train-params.json') as fh:
            data_cfg=json.load(fh)
        train_model(**data_cfg)
        with open('test/config/predict-params.json') as fh:
            data_cfg=json.load(fh)
        predict_model(**data_cfg)
    if 'all' in targets:
        with open('config/data-params.json') as fh:
            data_cfg=json.load(fh)
        generate_table(**data_cfg)
        with open('config/feature-params.json') as fh:
            data_cfg=json.load(fh)
        features_build(**data_cfg)
        with open('config/train-params.json') as fh:
            data_cfg=json.load(fh)
        train_model(**data_cfg)
        with open('config/predict-params.json') as fh:
            data_cfg=json.load(fh)
        predict_model(**data_cfg) 
    return


if __name__ == "__main__":
    targets = sys.argv[1:]
    main(targets)